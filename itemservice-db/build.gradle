plugins {
	id 'org.springframework.boot' version '2.6.5'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

// LIKE 연산 이슈로 hibernate 버전 다운그레이드
ext["hibernate.version"] = "5.6.5.Final"

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// JdbcTemplate 추가, 스프링이 공식적으로 지원하는 라이브러리인 경우 별도의 버전관리가 필요없다.
	// implementation 'org.springframework.boot:spring-boot-starter-jdbc'

	// MyBatis 추가, MyBatis는 스프링이 공식적으로 지원하는 라이브러리가 아니므로 별도의 버전관리가 필요하다(e.g. :2.2.0)
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.0'

	// JPA 라이브러리, 스프링 데이터 JPA 추가 추가
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// Querydsl 추가
	implementation 'com.querydsl:querydsl-jpa'

	// 아래 annotationProcessor는 엔티티(Entity) 객체를 Querydsl JPA가 읽어서 조회용 객체(QXxx.java)로 변환하는데 사용된다.
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//H2 데이터베이스 추가
	runtimeOnly 'com.h2database:h2'

	//테스트에서 lombok 사용
	testCompileOnly 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
}

tasks.named('test') {
	useJUnitPlatform()
}

// Querydsl 추가, 자동 생성된 Q클래스 gradle clean으로 제거한다.
clean {
	delete file('src/main/generated')
}
